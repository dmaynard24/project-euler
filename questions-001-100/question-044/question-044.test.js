// Pentagon numbers

// Problem 44
// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

function getPentagonDifference() {
  let limit = 9000000,
    pentagons = getPentagons(limit),
    upper = Math.floor(Math.sqrt((limit * 2) / 3 + 1 / 36) + 1 / 6),
    d;

  let j = 1;
  while (j < upper) {
    let pj = getNthPentagon(j);

    let k = upper;
    while (k > j) {
      let pk = getNthPentagon(k),
        sum = pj + pk,
        diff = pk - pj;

      if (pentagons[sum] && pentagons[diff]) {
        d = diff;
      }

      k--;
    }

    j++;
  }

  return d;
}

function getPentagons(limit) {
  let pentagons = [],
    n = 1,
    term = 1;

  while (term < limit) {
    term = getNthPentagon(n);
    pentagons[term] = true;

    n++;
  }

  return pentagons;
}

function getNthPentagon(n) {
  return (n * (3 * n - 1)) / 2;
}

test('gets the minimum difference between a pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal to be 5482660', () => {
  expect(getPentagonDifference()).toBe(5482660);
});
